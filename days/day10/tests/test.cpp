#include <gtest/gtest.h>
#include "Day10.h"
#include "CPU.h"
// Demonstrate some basic assertions for new class.
TEST(Day10Test, Part1Part2) {
    std::stringstream in;
    in << "addx 15\n";
    in << "addx -11\n";
    in << "addx 6\n";
    in << "addx -3\n";
    in << "addx 5\n";
    in << "addx -1\n";
    in << "addx -8\n";
    in << "addx 13\n";
    in << "addx 4\n";
    in << "noop\n";
    in << "addx -1\n";
    in << "addx 5\n";
    in << "addx -1\n";
    in << "addx 5\n";
    in << "addx -1\n";
    in << "addx 5\n";
    in << "addx -1\n";
    in << "addx 5\n";
    in << "addx -1\n";
    in << "addx -35\n";
    in << "addx 1\n";
    in << "addx 24\n";
    in << "addx -19\n";
    in << "addx 1\n";
    in << "addx 16\n";
    in << "addx -11\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 21\n";
    in << "addx -15\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx -3\n";
    in << "addx 9\n";
    in << "addx 1\n";
    in << "addx -3\n";
    in << "addx 8\n";
    in << "addx 1\n";
    in << "addx 5\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx -36\n";
    in << "noop\n";
    in << "addx 1\n";
    in << "addx 7\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 2\n";
    in << "addx 6\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 7\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "addx -13\n";
    in << "addx 13\n";
    in << "addx 7\n";
    in << "noop\n";
    in << "addx 1\n";
    in << "addx -33\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 2\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 8\n";
    in << "noop\n";
    in << "addx -1\n";
    in << "addx 2\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "addx 17\n";
    in << "addx -9\n";
    in << "addx 1\n";
    in << "addx 1\n";
    in << "addx -3\n";
    in << "addx 11\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx -13\n";
    in << "addx -19\n";
    in << "addx 1\n";
    in << "addx 3\n";
    in << "addx 26\n";
    in << "addx -30\n";
    in << "addx 12\n";
    in << "addx -1\n";
    in << "addx 3\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx -9\n";
    in << "addx 18\n";
    in << "addx 1\n";
    in << "addx 2\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 9\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx -1\n";
    in << "addx 2\n";
    in << "addx -37\n";
    in << "addx 1\n";
    in << "addx 3\n";
    in << "noop\n";
    in << "addx 15\n";
    in << "addx -21\n";
    in << "addx 22\n";
    in << "addx -6\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "addx 2\n";
    in << "addx 1\n";
    in << "noop\n";
    in << "addx -10\n";
    in << "noop\n";
    in << "noop\n";
    in << "addx 20\n";
    in << "addx 1\n";
    in << "addx 2\n";
    in << "addx 2\n";
    in << "addx -6\n";
    in << "addx -11\n";
    in << "noop\n";
    in << "noop\n";
    in << "noop\n";
    auto c = std::make_unique<CPU>();
    for(std::string readline; std::getline(in,readline);) {
        c->parseCommand(readline);
    }
    std::stringstream check;
    check << "##..##..##..##..##..##..##..##..##..##..\n";
    check << "###...###...###...###...###...###...###.\n";
    check << "####....####....####....####....####....\n";
    check << "#####.....#####.....#####.....#####.....\n";
    check << "######......######......######......####\n";
    check << "#######.......#######.......#######.....\n";
    ASSERT_EQ(c->drawScreen(), check.str());
}